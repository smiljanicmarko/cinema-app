import React, { useState, useEffect, useCallback } from 'react';
import { Button, Col, Form, Row, Table } from 'react-bootstrap';
import { useNavigate } from "react-router-dom";
import TestAxios from '../../../apis/TestAxios';


const Zadaci = () => {

    const [tabela, setTabela] = useState([])
    const [pageNo, setPageNo] = useState(0)
    const [totalPages, setTotalPages] = useState(0)

    var navigate = useNavigate()

    const izbrisi = (id) => {
        TestAxios.delete('/zadaci/' + id)
        .then(res => {
            // handle success
            console.log(res);
            alert('Brisanje je uspesno izvrseno!');
            window.location.reload();
        })
        .catch(error => {
            // handle error
            console.log(error);
            alert('Doslo je do greske, molimo pokusajte ponovo!');
         });
    }

    const goToAdd = () => {
        navigate("/dodavanje");
    }

    const getZadaci = useCallback(() => {
        TestAxios.get(`/zadaci?pageNo=${pageNo}`)
            .then(res => {
                // handle success
                console.log(res);
                setTabela(res.data)
                setTotalPages(res.headers["total-pages"])
            })
            .catch(error => {
                // handle error
                console.log(error);
                alert('Error occured please try again!');
            });
    }, [pageNo]);


    useEffect(() => {
        getZadaci();
    }, [pageNo]);
    {/* ================================== RENDER TABELE ==================== */ }
    const renderTabela = () => {
        return tabela.map((klasa, index) => {
            return (
                <tr key={klasa.id}>
                    <td>{klasa.ime}</td>
                    <td>{klasa.zaduzeni}</td>
                    <td>{klasa.bodovi}</td>
                    <td>{klasa.sprint}</td>
                    <td>{klasa.stanje}</td>
                     {/* === DUGMICI ===*/ }
                    <td><Button className='btn btn-danger' onClick={()=>izbrisi(klasa.id)}>Izbrisi</Button></td>
                </tr>
            )
        })
    }
    //=============================================================================

    return (
        <div>
            <h1>ZADACI</h1>

            {/* ================================== ADD + PAGINACIJA IZNAD TABELE ================= */}
            <Button className="button button-navy" onClick={goToAdd} >Dodaj</Button>

            <div style={{ display: 'flex', justifyContent: 'flex-end' }}>
                <Row>
                    <Col>
                        <Button disabled={pageNo <= 0} onClick={() => setPageNo(pageNo - 1)}>Previous</Button>
                    </Col>
                    <Col>
                        <Button disabled={pageNo >= totalPages - 1} onClick={() => setPageNo(pageNo + 1)}>Next</Button>
                    </Col>
                </Row>
            </div>
            <Row><Col>
                <Table id="movies-table">
                    <thead>
                        <tr>
                            {/* ================================== ZAGLAVLJE TABELE ================= */}
                            <th>Name</th>
                            <th>Duration (min)</th>
                            <th>Genres</th>
                            <th></th>
                        </tr>
                    </thead>
                    {/* ================================== TELO TABELE  ================= */}
                    <tbody>
                        {renderTabela()}
                    </tbody>
                </Table>
            </Col></Row>

        </div>
    )

}

export default Zadaci